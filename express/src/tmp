// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  posts         Post[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime
  @@unique([identifier, token])
}

model Post {
  id             Int      @id @unique @default(autoincrement())
  title          String
  penName        String   @default("anonymous")
  user           User     @relation(fields: [userId], references: [id])
  userId         String
  classification String   @default("all")
  content        String   @default("")
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

// enum Role {
//   USER
//   ADMIN
// }

// model Profile {
//   id        Int      @id @unique @default(autoincrement())
//   content   String
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
//   user      User     @relation(fields: [userId], references: [id])
//   userId    String   @unique
// }

// const [reviews, setReviews] = useState<Review[]>([
//   {
//     author: "龍之介",
//     nameDisplay: true,
//     content: "2行目の「郊外のぎらぎらひかる草の波」の出典を明記してください"
//   },
//   {
//     author: "諭吉",
//     nameDisplay: false,
//     content: "「イーハトーヴォ」が分からないので説明してください。"
//   }
// ]);